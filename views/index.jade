doctype html
head
	meta(charset='utf-8', name='viewport', content='width=device-width', initial-scale='1.0', maximum-scale='1.0', user-scalable='no')
	title= 'DEER MAP'

	// Stylesheets
	link(rel='stylesheet', href='https://api.tiles.mapbox.com/mapbox.js/v1.6.2/mapbox.css')
	link(rel='stylesheet', href='/stylesheets/style.css')
	link(rel='stylesheet', href="//netdna.bootstrapcdn.com/bootstrap/3.1.1/css/bootstrap.min.css")

	// Javascript
	script(src='https://api.tiles.mapbox.com/mapbox.js/v1.6.2/mapbox.js')
	script(src="//netdna.bootstrapcdn.com/bootstrap/3.1.1/js/bootstrap.min.js")
	script(src="//ajax.googleapis.com/ajax/libs/jquery/1.11.0/jquery.min.js")
	script(src='//code.jquery.com/ui/1.10.4/jquery-ui.js')

body
	#map
		script.
			var map =  L.mapbox.map('map', 'eychen2014.hme0hhgm', {zoomControl: false, minZoom: 15, maxZoom: 20, maxBounds: [[40.335589, -74.672224], [40.354200, -74.643299]]}).setView([40.346056,-74.654007], 16);

	nav.navbar.navbar-default(role='navigation')
		.container-fluids
			// Brand and toggle get grouped for better mobile display
			.navbar-header
				button.navbar-toggle(type='button', data-toggle='collapse', data-target='#bs-example-navbar-collapse-1')
					span.sr-only Toggle navigation
					span.icon-bar
					span.icon-bar
					span.icon-bar
				a.navbar-brand(href='#') Princeton Food Map
			
			// Collect the nav links, forms, and other content for toggling
			#bs-example-navbar-collapse-1.collapse.navbar-collapse
				ul.nav.navbar-nav
					li.active
						a(href='#') About
					li
						a(href='#') Contact
				ul.nav.navbar-nav.navbar-right
					li
						a(href='https://fed.princeton.edu/cas/logout') LOGOUT

	div.container-fluid
		div.row
			div.col-md-3
				div#myheading.panel-heading
					h3#myh3
						b Princeton Food Map     
				div#accordion.panel-group
					- for row in dataRows
						h4
							div.panel-heading #{row.subject}
						div.panel-body.mine #{row.mess} #{row.time}
						
	//- for row in dataRows
			script.
			var lat = "#{row.lat}";
			var longit = "#{row.longit}";
			var subject = "#{row.subject}";
			var food = "#{row.food}";

			L.mapbox.featureLayer({
				// this feature is in the GeoJSON format: see geojson.org
				// for the full specification
				type: 'Feature',
				geometry: {
					type: 'Point',
					// coordinates here are in longitude, latitude order because
					// x, y is the standard for GeoJSON and many formats
					coordinates: [parseFloat(longit), parseFloat(lat)]
				},
				properties: {
					title: subject,
					// one can customize markers by adding simplestyle properties
					// http://mapbox.com/developers/simplestyle/
					'marker-size': 'small',
					'marker-color': '#f0a'
				}
			}).addTo(map);
	
	- var buildings = [];		
	- var current_location = dataRows[0].location;
	- console.log("--------------------------------------");
	- console.log("Starting location: " + current_location);

	- var subjects = [];
	- var messages = [];
	- var currlong;
	- var currlat;
	- for row in dataRows
		- console.log("In consideration: " + row.location + " versus: " + current_location);
		if row.location === current_location
			- subjects.push(row.subject);
			- console.log("++++++We pushed+++++");
			- messages.push(row.mess.replace(/\r?\n|\r/g, " "));
			- console.log(subjects);
			- console.log(messages);
			- currlong = row.longit;
			- currlat = row.lat;
		else 
			- console.log("Mapping at: " + current_location + " " + currlong + " " + currlat);
			- console.log("Subjects: " + subjects.length);
			- console.log("Messages: " + messages.length);
			script.
				var myLayer = L.mapbox.featureLayer().addTo(map);
				var geoJson = [{
					// this feature is in the GeoJSON format: see geojson.org
					// for the full specification
					type: 'Feature',
					geometry: {
						type: 'Point',
						// coordinates here are in longitude, latitude order because
						// x, y is the standard for GeoJSON and many formats
						coordinates: [parseFloat("#{currlong}"), parseFloat("#{currlat}")]
					},
					properties: {
						title: "#{subjects}",
						description: "#{messages}",
						// one can customize markers by adding simplestyle properties
						// http://mapbox.com/developers/simplestyle/
						'marker-size': 'small',
						'marker-color': '#f0a',
					}
				}];
				// Add features to the map
				//L.mapbox.featureLayer(geoJson).addTo(map);
				myLayer.setGeoJSON(geoJson);

			- subjects = [];
			- subjects.push(row.subject);
			- messages = [];
			- messages.push(row.mess.replace(/\r?\n|\r/g, " "));
			- current_location = row.location;
			- currlong = row.longit;
			- currlat = row.lat;

	- console.log("Mapping at: " + current_location + " " + currlong + " " + currlat);
	- console.log("Subjects: " + subjects);
	- console.log("Messages: " + messages);
	script.
		var myLayer = L.mapbox.featureLayer().addTo(map);
		subject = subject + "#{buildings[0]}"
		var geoJson = [{
			// this feature is in the GeoJSON format: see geojson.org
			// for the full specification
			type: 'Feature',
			geometry: {
				type: 'Point',
				// coordinates here are in longitude, latitude order because
				// x, y is the standard for GeoJSON and many formats
				coordinates: [parseFloat("#{currlong}"), parseFloat("#{currlat}")]
			},
			properties: {
				title: "MOFO" //"#{subjects}",
				description: "FOMO" //#{messages}",
				// one can customize markers by adding simplestyle properties
				// http://mapbox.com/developers/simplestyle/
				'marker-size': 'small',
				'marker-color': '#f0a',
			}
		}];		
		myLayer.setGeoJSON(geoJson);


script.
	$("#accordion").accordion({collapsible: true, heightStyle: "content"});	

	var format = function(str) {
		return(str.substring(15, 5));
	}


