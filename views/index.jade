doctype html
head
	meta(charset='utf-8', name='viewport', content='width=device-width', initial-scale='1.0', maximum-scale='1.0', user-scalable='no')
	title= 'DEER MAP'

	// Stylesheets
	link(rel='stylesheet', href='https://api.tiles.mapbox.com/mapbox.js/v1.6.2/mapbox.css')
	link(rel='stylesheet', href="//netdna.bootstrapcdn.com/bootstrap/3.1.1/css/bootstrap.min.css")
	link(rel='stylesheet', href='/stylesheets/style.css')
	link(href='/lib/jquery.bxslider.css', rel='stylesheet')

	// Javascript
	script(src='https://api.tiles.mapbox.com/mapbox.js/v1.6.2/mapbox.js')
	script(src="//ajax.googleapis.com/ajax/libs/jquery/1.11.0/jquery.min.js")
	script(src='//code.jquery.com/ui/1.10.4/jquery-ui.js')
	script(src="//netdna.bootstrapcdn.com/bootstrap/3.1.1/js/bootstrap.min.js")
	

body
	#map
		script.
			var map =  L.mapbox.map('map', 'eychen2014.hme0hhgm', {zoomControl: false, minZoom: 15, maxZoom: 20, maxBounds: [[40.335589, -74.676224], [40.356200, -74.643299]]}).setView([40.346056,-74.654007], 16);

	nav.navbar.deer.navbar-default.navbar-static-top(role='navigation', style='margin-bottom=0px;')
		.container-fluids
			// Brand and toggle get grouped for better mobile display
			.navbar-header
				button.navbar-toggle(type='button', data-toggle='collapse', data-target='#bs-example-navbar-collapse-1')
					span.sr-only Toggle navigation
					span.icon-bar
					span.icon-bar
					span.icon-bar
				a.navbar-brand(href='#') Princeton Food Map
			
			// Collect the nav links, forms, and other content for toggling
			#bs-example-navbar-collapse-1.collapse.navbar-collapse
				ul.nav.navbar-nav
					li.active
						a(href='#') Map
					li
						a(href='#') About
					li
						a(href='#') Contact
				ul.nav.navbar-nav.navbar-right
					li
						a(href='https://fed.princeton.edu/cas/logout') LOGOUT

	#sidebar.column.col-sm-2.col-xs-1.sidebar-offcanvas
		h3(style='text-align: center; color: #555; text-shadow: none;') Free Food Map    
		div#accordion.panel-group
			- for row in dataRows
				h5
					div.panel-heading #{row.subject}
				div.panel-body.mine #{row.mess} #{row.time}
	
	- var buildings = [];		
	- var current_location = dataRows[0].location;
	- console.log("--------------------------------------");
	- console.log("Starting location: " + current_location);
	- var subjects = [];
	- var messages = [];
	- var times = [];
	- var currlong;
	- var currlat;
	- for row in dataRows
		- console.log("In consideration: " + row.location + " versus: " + current_location);
		if row.location === current_location
			- subjects.push(row.subject);
			- messages.push(row.mess.replace(/\r?\n|\r/g, " "));
			- times.push(row.time);
			- currlong = row.longit;
			- currlat = row.lat;
		else 
			- console.log("Mapping at: " + current_location + " " + currlong + " " + currlat);
			- console.log("Subjects: " + subjects);
			- console.log("Messages: " + messages);
			- console.log("Times: " + times);
			script.
				// a hackish way to force messages, tiems, and subjects to be an array - Patrick
				var messages = "#{messages.join('|~|')}";
				var subjects = "#{subjects.join('|~|')}";
				var times = "#{times.join('|~|')}";
				times = times.split("|~|");
				var geoJson = [{
					// this feature is in the GeoJSON format: see geojson.org
					// for the full specification
					type: 'Feature',
					geometry: {
						type: 'Point',
						// coordinates here are in longitude, latitude order because
						// x, y is the standard for GeoJSON and many formats
						coordinates: [parseFloat("#{currlong}"), parseFloat("#{currlat}")]
					},
					properties: {
						title: "#{subjects}",
						description: "#{messages}",
						// one can customize markers by adding simplestyle properties
						// http://mapbox.com/developers/simplestyle/
						'marker-size': 'small',
						'marker-color': '#f0a',
					}
				}];
				var myLayer = L.mapbox.featureLayer(geoJson).addTo(map);

				// and here's where I force it to be an array - Patrick
				messages = messages.split("|~|");
				subjects = subjects.split("|~|");
				
				var caritemsfirst = "<div class='item active'>" +
																"<h1 class=text-center>" + subjects[0] + "</h1>" +
																"<h3 class=text-center>" + times[0] + "</h3>" + 
																"<p class=text-center>" + messages[0] + "</p>" +
														"</div>";
				var caritems = "";
				for (var i = 1; i < messages.length; i++) {
					caritems += "<div class='item'>" + 
												"<h1 class=text-center>" + subjects[i] + "</h1>" + 
												"<h3 class=text-center>" + times[i] + "</h3>" +
												"<p class=text-center>" + messages[i] + "</p>" +
											"</div>";
				}
				
				var arrows = "";
				if (subjects.length > 1) {
					arrows = "<a class='left left-arrow carousel-control' href='#marker' data-slide='prev'>" +
											"<span class='glyphicon glyphicon-chevron-left'></span>" + 
										"</a>" + 
										"<a class='right pull-right right-arrow carousel-control' href='#marker' data-slide='next'>" +
											"<span class='glyphicon glyphicon-chevron-right'></span>" +
										"</a>";
				}

				////
				// indicators are dots corresponding to each page. Uncomment if you want it.
				////
				//- var indicatorsfirst = "<li data-target='#marker' data-slide-to='0' class='active'></li>";
				//- var indicators = "";
				//- for (var i = 1; i < subjects.length; i++) {
				//- 	indicators += "<li data-target='#marker' data-slide-to='" + i + "'></li>";
				//- }
				
				var content = "<div id='marker' class='carousel slide foodmarker' data-ride='carousel' data-interval='false'>" +
												//- "<ol class='carousel-indicators'>" +
												//- 	indicatorsfirst + indicators +
												//- "</ol>" +
												"<div class='carousel-inner'>" +
													caritemsfirst + caritems +
												"</div>" + 
												arrows + 
											"</div>";
				myLayer.bindPopup(content);

			- subjects = [];
			- subjects.push(row.subject);
			- messages = [];
			- messages.push(row.mess.replace(/\r?\n|\r/g, " "));
			- times = [];
			- times.push(row.time);
			- current_location = row.location;
			- currlong = row.longit;
			- currlat = row.lat;

script.
	$("#accordion").accordion({collapsible: true, heightStyle: "content"});	
